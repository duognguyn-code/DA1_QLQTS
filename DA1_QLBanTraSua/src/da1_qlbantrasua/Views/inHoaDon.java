/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package da1_qlbantrasua.Views;


import static com.itextpdf.kernel.pdf.PdfName.Border;

import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.color.Color;
import com.itextpdf.kernel.color.DeviceRgb;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;


import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;

import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.VerticalAlignment;

import da1_qlbantrasua.Services.HoaDonService;
import da1_qlbantrasua.Services.impl.HoaDonServiceImpl;
import da1_qlbantrasua.ViewModels.ChiTietHoaDon;
import java.io.FileNotFoundException;


import com.itextpdf.io.image.ImageData;
import com.itextpdf.io.image.ImageDataFactory;
import com.itextpdf.kernel.color.Color;
import com.itextpdf.kernel.color.DeviceRgb;
import com.itextpdf.kernel.font.PdfFont;
import com.itextpdf.kernel.font.PdfFontFactory;
import com.itextpdf.kernel.pdf.PdfDocument;
import com.itextpdf.kernel.pdf.PdfWriter;
import com.itextpdf.layout.Document;

import com.itextpdf.layout.element.Cell;
import com.itextpdf.layout.element.Image;
import com.itextpdf.layout.element.Paragraph;
import com.itextpdf.layout.element.Table;
import com.itextpdf.layout.property.TextAlignment;
import com.itextpdf.layout.property.VerticalAlignment;
import da1_qlbantrasua.Services.HoaDonService;
import da1_qlbantrasua.Services.impl.HoaDonServiceImpl;
import da1_qlbantrasua.ViewModels.ChiTietHoaDon;
import java.io.FileNotFoundException;

import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Admin
 */
public class inHoaDon extends javax.swing.JFrame {

    private HoaDonService hds;
    /**
     * Creates new form inHoaDon
     */
    public inHoaDon(String maHoaDon, String ngayTao, String tongtien ) {
        initComponents();
        this.hds = new HoaDonServiceImpl();
        setLocationRelativeTo(null);
        txtMahD.setText(maHoaDon);
        txtNgayTao.setText(ngayTao);
        txtTongTien.setText(tongtien);
        loadTableCT(maHoaDon);
        
        
    }

    
     private void loadTableCT(String ma) {
        DefaultTableModel model = (DefaultTableModel) this.tblCTHD.getModel();
        model.setRowCount(0);
        for (ChiTietHoaDon ct : this.hds.getListCTTheoMa(ma)) {
            Object[] rowData = {
                ct.getMa(),
                ct.getTen(),
                ct.getGia(),
                ct.getSoLuong(),
                ct.getMucDuong(),
                ct.getMucDa(),
                ct.getTopping(),
                ct.getThanhTien(ct.getSoLuong(), ct.getGia()),
            };

            model.addRow(rowData);
        }
    }

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMahD = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTongTien = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCTHD = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtNgayTao = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("In hóa đơn");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("MÃ Hóa Đơn");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Tổng tiền");

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SP", "tên SP", "Đơn Giá", "Số Lượng", "Mức đường", "Mức Đá", "Topping", "Thành tiền", "Trạng Thái"
            }
        ));
        tblCTHD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCTHDMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCTHD);

        jButton1.setText("In Hóa đơn");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ngày tạo");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 763, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(637, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(39, 39, 39))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(39, 39, 39)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMahD, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(302, 302, 302)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtMahD, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel6))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNgayTao, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtTongTien, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblCTHDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCTHDMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tblCTHDMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        inFilePDF();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(inHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(inHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(inHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(inHoaDon.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCTHD;
    private javax.swing.JLabel txtMahD;
    private javax.swing.JLabel txtNgayTao;
    private javax.swing.JLabel txtTongTien;
    // End of variables declaration//GEN-END:variables

    public void inFilePDF() {
        Document document;
        try {
            try {
                String pathStr = "D:\\FPT_FPOLYTECHNIC\\KI_6\\DA1_QLBanTraSua\\DA1_QuanLyBanTraSua\\DA1_QLBanTraSua\\hoaDon.pdf";
                String font1 = "D:\\FPT_FPOLYTECHNIC\\KI_6\\DA1_QLBanTraSua\\DA1_QuanLyBanTraSua\\DA1_QLBanTraSua\\unicode.ttf";
                String imgPath = "D:\\FPT_FPOLYTECHNIC\\KI_6\\DA1_QLBanTraSua\\DA1_QuanLyBanTraSua\\DA1_QLBanTraSua\\src\\da1_qlbantrasua\\Views\\icon\\bill.png";
                PdfFont fontTitle = PdfFontFactory.createFont(font1, com.itextpdf.text.pdf.BaseFont.IDENTITY_H);
                Date date = new Date();
                Calendar calendar = GregorianCalendar.getInstance();
                calendar.setTime(date);
                int year = calendar.get(Calendar.YEAR);
                int month = calendar.get(Calendar.MONTH);
                int day = calendar.get(Calendar.DAY_OF_MONTH);
                int hour = calendar.get(Calendar.HOUR_OF_DAY);
                int min = calendar.get(Calendar.MINUTE);
                int second = calendar.get(Calendar.SECOND);
                String timeNow = hour + ":" + min + ":" + second + "\t" + day + "/" + month + "/" + year;

                PdfWriter pdfWriter = new PdfWriter(pathStr);

                PdfDocument pdfDocument = new PdfDocument(pdfWriter);
                pdfDocument.addNewPage();

                ImageData imageData = ImageDataFactory.create(imgPath);
                Image imageLogo = new Image(imageData);
                imageLogo.setHeight(50f).setWidth(60f);

                document = new Document(pdfDocument);

                float columnWith[] = {80, 1000};
                Table tableHeader = new Table(columnWith).setBorder(Border.NO_BORDER).setHeight(60f).setAutoLayout();
                tableHeader.setBackgroundColor(new DeviceRgb(1, 181, 204));
                tableHeader.addCell(new Cell().add(imageLogo).setBorder(Border.NO_BORDER)
                        .setVerticalAlignment(VerticalAlignment.MIDDLE).setMarginTop(5f));
                tableHeader.addCell(new Cell().add("Hóa đơn bán hàng")
                        .setFontColor(new DeviceRgb(255, 255, 255)).setFontSize(17f)
                        .setBold()
                        .setMarginLeft(15f)
                        .setFont(fontTitle)
                        .setTextAlignment(TextAlignment.CENTER)
                        .setVerticalAlignment(VerticalAlignment.MIDDLE)
                        .setBorder(Border.NO_BORDER));

                Paragraph infoCostumer = new Paragraph("Thông tin hóa đơn");
                infoCostumer.setFont(fontTitle).setBold().setMarginTop(15f);

                Paragraph nameCos = new Paragraph("ma Hoa Don:\t" + txtMahD.getText());
                nameCos.setFont(fontTitle).setFontSize(12f);

                Paragraph purchaseTime = new Paragraph("Ngay Tao:\t" + txtNgayTao.getText());
                purchaseTime.setFont(fontTitle).setFontSize(12f);

                

                document.add(tableHeader);
                document.add(infoCostumer);
                document.add(nameCos);
                document.add(purchaseTime);
//                document.add(address);

                Paragraph listProducts = new Paragraph("San Pham");
                listProducts.setFont(fontTitle).setBold().setMarginTop(25f).setMarginBottom(-10);

                document.add(listProducts);

                float columnWithTableContent[] = {550, 150, 150, 150};
                Table tableContent = new Table(columnWithTableContent)
                        .setTextAlignment(TextAlignment.CENTER)
                        .setVerticalAlignment(VerticalAlignment.MIDDLE)
                        .setBorder(Border.NO_BORDER).setMarginTop(15f);

                tableContent.addCell(new Cell().add("Ten san pham")
                        .setBackgroundColor(new DeviceRgb(1, 181, 204))
                        .setFont(fontTitle).setBold().setFontColor(Color.WHITE)
                        .setFontSize(9)
                        .setBorder(Border.NO_BORDER));
                tableContent.addCell(new Cell().add("So Luong")
                        .setBackgroundColor(new DeviceRgb(1, 181, 204)).setFont(fontTitle)
                        .setBold().setFontColor(Color.WHITE)
                        .setFontSize(9)
                        .setBorder(Border.NO_BORDER));
                tableContent.addCell(new Cell().add("gia Ban")
                        .setFontSize(9)
                        .setBackgroundColor(new DeviceRgb(1, 181, 204)).setFont(fontTitle)
                        .setBold().setFontColor(Color.WHITE)
                        .setBorder(Border.NO_BORDER));
                tableContent.addCell(new Cell().add("Thanh tien")
                        .setFontSize(9)
                        .setBackgroundColor(new DeviceRgb(1, 181, 204)).setFont(fontTitle)
                        .setBold().setFontColor(Color.WHITE)
                        .setBorder(Border.NO_BORDER));

                for (int i = 0; i < tblCTHD.getRowCount(); i++) {

                    tableContent.addCell(new Cell().add(tblCTHD.getValueAt(i, 1).toString()).setFont(fontTitle).setBorder(Border.NO_BORDER).setFontSize(9));
                    tableContent.addCell(new Cell().add(tblCTHD.getValueAt(i, 3).toString()).setFont(fontTitle).setBorder(Border.NO_BORDER).setFontSize(9));
                    tableContent.addCell(new Cell().add(tblCTHD.getValueAt(i, 2).toString()).setFont(fontTitle).setBorder(Border.NO_BORDER).setFontSize(9));
                    tableContent.addCell(new Cell().add(tblCTHD.getValueAt(i, 4).toString()).setFont(fontTitle).setBorder(Border.NO_BORDER).setFontSize(9));

                }
                document.add(tableContent);

                float coulumnWithFotter[] = {100, 300, 900, 250, 150};
                Table tableFotter = new Table(coulumnWithFotter)
                        .setTextAlignment(TextAlignment.LEFT)
                        .setVerticalAlignment(VerticalAlignment.MIDDLE)
                        .setBorder(Border.NO_BORDER);
                tableFotter.addCell(new Cell().setBackgroundColor(new DeviceRgb(1, 181, 204)).setBorder(Border.NO_BORDER));
                tableFotter.addCell(new Cell().setBackgroundColor(new DeviceRgb(1, 181, 204)).setBorder(Border.NO_BORDER));
                tableFotter.addCell(new Cell().setBackgroundColor(new DeviceRgb(1, 181, 204)).setBorder(Border.NO_BORDER));

                document.add(tableFotter);
                tableFotter.addCell(new Cell().setBackgroundColor(new DeviceRgb(1, 181, 204)).setBorder(Border.NO_BORDER));
                document.add(tableFotter);
                
                Paragraph cachDong = new Paragraph("  ");
                cachDong.setFont(fontTitle).setFontSize(12f);
                
                Paragraph tongTien = new Paragraph("Tổng Tiền:" + txtTongTien.getText());
                tongTien.setFont(fontTitle).setFontSize(12f);
                
                document.add(tongTien);
                document.add(cachDong);

                JOptionPane.showMessageDialog(rootPane, "Hóa đơn đã được in ra");
                document.close();
            } catch (FileNotFoundException e) {
                e.printStackTrace(System.out);
                e.getMessage();
            }
        } catch (Exception e) {
            e.printStackTrace(System.out);
            e.getMessage();
        }
    }
}
